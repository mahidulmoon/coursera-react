{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\Fullstack WEB\\\\reactpractice\\\\coursera-react\\\\vidly\\\\src\\\\components\\\\movies.jsx\";\nimport React, { Component } from 'react';\nimport { getMovies } from '../services/fakeMovieService';\nimport Pagination from './common/pagination';\nimport { paginate } from '../utils/paginate';\nimport ListGroup from './common/listGroup';\nimport { getGenres } from '../services/fakeGenreService';\nimport MoviesTable from './moveisTable';\nimport _ from 'lodash';\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      pageSize: 4,\n      currentPage: 1,\n      genres: [],\n      sortColumn: {\n        path: 'title',\n        order: 'asc'\n      }\n    };\n\n    this.hadleDelete = movie => {\n      const movies = this.state.movies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies\n      });\n    };\n\n    this.handleLike = movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index] = { ...movies[index]\n      };\n      movies[index].liked = !movies[index].liked;\n      this.setState({\n        movies\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleGenreSelect = genre => {\n      this.setState({\n        selectedGenre: genre\n      });\n    };\n\n    this.handleSort = path => {\n      this.setState({\n        sortColumn: {\n          path,\n          order: 'asc'\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      movies: getMovies(),\n      genres: getGenres()\n    });\n  }\n\n  render() {\n    const {\n      length: count\n    } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      selectedGenre,\n      sortColumn,\n      movies: allMovies\n    } = this.state;\n\n    if (count === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"There are no movies in the database\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this);\n    }\n\n    const filtered = selectedGenre ? allMovies.filter(m => m.genre._id === selectedGenre._id) : allMovies;\n\n    const sort = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sort, currentPage, pageSize);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          items: this.state.genres,\n          selectedItem: this.state.selectedGenre,\n          onItemSelect: this.handleGenreSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Showing \", count, \" movies in the database \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MoviesTable, {\n          movies: movies,\n          onLike: this.handleLike,\n          onSort: this.handleSort,\n          onDelete: this.hadleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          itemsCount: filtered.length,\n          pageSize: pageSize,\n          currentPage: currentPage,\n          onPageChange: this.handlePageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["G:/Fullstack WEB/reactpractice/coursera-react/vidly/src/components/movies.jsx"],"names":["React","Component","getMovies","Pagination","paginate","ListGroup","getGenres","MoviesTable","_","Movies","state","movies","pageSize","currentPage","genres","sortColumn","path","order","hadleDelete","movie","filter","m","_id","setState","handleLike","index","indexOf","liked","handlePageChange","page","handleGenreSelect","genre","selectedGenre","handleSort","componentDidMount","render","length","count","allMovies","filtered","sort","orderBy"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,SAAR,QAAwB,8BAAxB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAAQC,QAAR,QAAuB,mBAAvB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAAQC,SAAR,QAAwB,8BAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;;AACA,MAAMC,MAAN,SAAqBR,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3BS,KAD2B,GACpB;AACHC,MAAAA,MAAM,EAAE,EADL;AAEHC,MAAAA,QAAQ,EAAC,CAFN;AAGHC,MAAAA,WAAW,EAAE,CAHV;AAIHC,MAAAA,MAAM,EAAE,EAJL;AAKHC,MAAAA,UAAU,EAAE;AAACC,QAAAA,IAAI,EAAE,OAAP;AAAgBC,QAAAA,KAAK,EAAE;AAAvB;AALT,KADoB;;AAAA,SAW3BC,WAX2B,GAWZC,KAAD,IAAU;AACpB,YAAMR,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAX,CAAkBS,MAAlB,CAAyBC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUH,KAAK,CAACG,GAA9C,CAAf;AACA,WAAKC,QAAL,CAAc;AAACZ,QAAAA;AAAD,OAAd;AACH,KAd0B;;AAAA,SAe3Ba,UAf2B,GAebL,KAAD,IAAU;AACnB,YAAMR,MAAM,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,MAAf,CAAf;AACA,YAAMc,KAAK,GAAGd,MAAM,CAACe,OAAP,CAAeP,KAAf,CAAd;AACAR,MAAAA,MAAM,CAACc,KAAD,CAAN,GAAgB,EAAC,GAAGd,MAAM,CAACc,KAAD;AAAV,OAAhB;AACAd,MAAAA,MAAM,CAACc,KAAD,CAAN,CAAcE,KAAd,GAAsB,CAAChB,MAAM,CAACc,KAAD,CAAN,CAAcE,KAArC;AACA,WAAKJ,QAAL,CAAc;AAACZ,QAAAA;AAAD,OAAd;AACH,KArB0B;;AAAA,SAsB3BiB,gBAtB2B,GAsBRC,IAAI,IAAG;AACtB,WAAKN,QAAL,CAAc;AAACV,QAAAA,WAAW,EAACgB;AAAb,OAAd;AACH,KAxB0B;;AAAA,SAyB3BC,iBAzB2B,GAyBPC,KAAK,IAAG;AACxB,WAAKR,QAAL,CAAc;AAACS,QAAAA,aAAa,EAACD;AAAf,OAAd;AACH,KA3B0B;;AAAA,SA4B3BE,UA5B2B,GA4BdjB,IAAI,IAAG;AAChB,WAAKO,QAAL,CAAc;AAAER,QAAAA,UAAU,EAAE;AAACC,UAAAA,IAAD;AAAMC,UAAAA,KAAK,EAAE;AAAb;AAAd,OAAd;AACH,KA9B0B;AAAA;;AAQ3BiB,EAAAA,iBAAiB,GAAE;AACf,SAAKX,QAAL,CAAc;AAACZ,MAAAA,MAAM,EAACT,SAAS,EAAjB;AAAoBY,MAAAA,MAAM,EAACR,SAAS;AAApC,KAAd;AACH;;AAqBD6B,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,MAAM,EAAEC;AAAV,QAAoB,KAAK3B,KAAL,CAAWC,MAArC;AACA,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,WAAZ;AAAwBmB,MAAAA,aAAxB;AAAsCjB,MAAAA,UAAtC;AAAmDJ,MAAAA,MAAM,EAAC2B;AAA1D,QAAuE,KAAK5B,KAAlF;;AACA,QAAI2B,KAAK,KAAI,CAAb,EAAe;AACX,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AACH;;AACD,UAAME,QAAQ,GAAGP,aAAa,GAAGM,SAAS,CAAClB,MAAV,CAAiBC,CAAC,IAAIA,CAAC,CAACU,KAAF,CAAQT,GAAR,KAAgBU,aAAa,CAACV,GAApD,CAAH,GAA8DgB,SAA5F;;AACA,UAAME,IAAI,GAAGhC,CAAC,CAACiC,OAAF,CAAUF,QAAV,EAAoB,CAACxB,UAAU,CAACC,IAAZ,CAApB,EAAuC,CAACD,UAAU,CAACE,KAAZ,CAAvC,CAAb;;AACA,UAAMN,MAAM,GAAGP,QAAQ,CAACoC,IAAD,EAAM3B,WAAN,EAAkBD,QAAlB,CAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACI,QAAC,SAAD;AAAW,UAAA,KAAK,EAAE,KAAKF,KAAL,CAAWI,MAA7B;AAAqC,UAAA,YAAY,EAAE,KAAKJ,KAAL,CAAWsB,aAA9D;AAA6E,UAAA,YAAY,EAAE,KAAKF;AAAhG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACI;AAAA,iCAAYO,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,WAAD;AAAa,UAAA,MAAM,EAAE1B,MAArB;AAA6B,UAAA,MAAM,EAAE,KAAKa,UAA1C;AAAsD,UAAA,MAAM,EAAE,KAAKS,UAAnE;AAA+E,UAAA,QAAQ,EAAE,KAAKf;AAA9F;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,UAAD;AAAY,UAAA,UAAU,EAAEqB,QAAQ,CAACH,MAAjC;AAAyC,UAAA,QAAQ,EAAExB,QAAnD;AAA6D,UAAA,WAAW,EAAEC,WAA1E;AAAuF,UAAA,YAAY,EAAE,KAAKe;AAA1G;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AArD0B;;AAwD/B,eAAenB,MAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {getMovies} from '../services/fakeMovieService';\r\nimport Pagination from './common/pagination';\r\nimport {paginate} from '../utils/paginate';\r\nimport ListGroup from './common/listGroup';\r\nimport {getGenres} from '../services/fakeGenreService';\r\nimport MoviesTable from './moveisTable';\r\nimport _ from 'lodash';\r\nclass Movies extends Component {\r\n    state ={\r\n        movies: [],\r\n        pageSize:4,\r\n        currentPage: 1,\r\n        genres: [],\r\n        sortColumn: {path: 'title', order: 'asc'}\r\n    };\r\n    componentDidMount(){\r\n        this.setState({movies:getMovies(),genres:getGenres()});\r\n    }\r\n    hadleDelete = (movie) =>{\r\n        const movies = this.state.movies.filter(m => m._id !== movie._id);\r\n        this.setState({movies});\r\n    };\r\n    handleLike = (movie) =>{\r\n        const movies = [...this.state.movies];\r\n        const index = movies.indexOf(movie);\r\n        movies[index] = {...movies[index]};\r\n        movies[index].liked = !movies[index].liked;\r\n        this.setState({movies});\r\n    };\r\n    handlePageChange = page =>{\r\n        this.setState({currentPage:page});\r\n    };\r\n    handleGenreSelect = genre =>{\r\n        this.setState({selectedGenre:genre});\r\n    }\r\n    handleSort = path =>{\r\n        this.setState({ sortColumn: {path,order: 'asc'} });\r\n    };\r\n    render() {\r\n        const { length: count } = this.state.movies;\r\n        const { pageSize, currentPage,selectedGenre,sortColumn , movies:allMovies} = this.state;\r\n        if( count=== 0){\r\n            return (<p>There are no movies in the database</p>)\r\n        }\r\n        const filtered = selectedGenre ? allMovies.filter(m => m.genre._id === selectedGenre._id) : allMovies;\r\n        const sort = _.orderBy(filtered, [sortColumn.path], [sortColumn.order])\r\n        const movies = paginate(sort,currentPage,pageSize);\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <ListGroup items={this.state.genres} selectedItem={this.state.selectedGenre} onItemSelect={this.handleGenreSelect} />\r\n                </div>\r\n                <div className=\"col\">\r\n                    <p>Showing {count} movies in the database </p>\r\n                    <MoviesTable movies={movies} onLike={this.handleLike} onSort={this.handleSort} onDelete={this.hadleDelete} />\r\n                    <Pagination itemsCount={filtered.length} pageSize={pageSize} currentPage={currentPage} onPageChange={this.handlePageChange} />\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Movies;"]},"metadata":{},"sourceType":"module"}